import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-installation-laravel',
  template: `
    <h1>ğŸ“Œ Partie 1 : Introduction et PrÃ©-requis</h1>
    <h2>ğŸ”¹ Installation de Laravel</h2>
    <h3>ğŸ”¸ MÃ©thode 1 : Installer Laravel via Composer</h3>
<p>pour que l'installation passe bien, Fermez xamp, vscode, tuez avec le gestionnaire de tache: php.exe, php-cgi.exe, httpd.exe, mysqld.exe</p>
    <p>ExÃ©cutez la commande suivante pour installer Laravel globalement :</p>
    <pre class="tab">composer global require laravel/installer</pre>
    <p>Ensuite, pour crÃ©er un nouveau projet Laravel :</p>
    <pre class="tab">laravel new mon_projet</pre>
    <p>OU si vous nâ€™avez pas installÃ© Laravel globalement :</p>
    <pre class="tab">
composer create-project --prefer-dist laravel/laravel mon_projet</pre
    >
    <h3>ğŸ”¸ MÃ©thode 2 : Cloner un projet Laravel existant</h3>
    <p>Si vous travaillez sur un projet dÃ©jÃ  existant, utilisez :</p>
    <pre class="tab">
git clone https://github.com/utilisateur/projet-laravel.git
cd projet-laravel
composer install</pre
    >

    <p>
      Ensuite, crÃ©ez un fichier .env (ou dupliquez .env.example) et gÃ©nÃ©rez la
      clÃ© dâ€™application :
    </p>
    <pre class="tab">
cp .env.example .env
php artisan key:generate</pre
    >
    <h3>ğŸ”¸ Lancer le serveur local de Laravel</h3>
    <p>
      Une fois lâ€™installation terminÃ©e, dÃ©marrez le serveur de dÃ©veloppement
      avec :
    </p>
    <pre class="tab">php artisan serve</pre>

    <p>Cela lancera le projet Ã  lâ€™adresse http://127.0.0.1:8000/.</p>

    <h2>ğŸ”¹ Structure du projet Laravel</h2>
    <p>
      Une fois installÃ©, Laravel gÃ©nÃ¨re une structure de fichiers organisÃ©e :
    </p>
    <ul>
      <li>ğŸ“‚ app/ â†’ Contient les modÃ¨les et la logique mÃ©tier</li>
      <li>ğŸ“‚ bootstrap/ â†’ DÃ©marrage de lâ€™application</li>
      <li>
        ğŸ“‚ config/ â†’ Fichiers de configuration (base de donnÃ©es, mail, cache,
        etc.)
      </li>
      <li>ğŸ“‚ database/ â†’ Migrations, seeders et factories</li>
      <li>ğŸ“‚ public/ â†’ Point dâ€™entrÃ©e (index.php), fichiers CSS, JS, images</li>
      <li>ğŸ“‚ resources/ â†’ Vues Blade, fichiers SCSS et JS (Frontend)</li>
      <li>ğŸ“‚ routes/ â†’ DÃ©finition des routes web et API (web.php, api.php)</li>
      <li>
        ğŸ“‚ storage/ â†’ Fichiers temporaires (logs, cache, fichiers uploadÃ©s)
      </li>
      <li>ğŸ“‚ tests/ â†’ Tests unitaires et fonctionnels</li>
      <li>ğŸ“‚ vendor/ â†’ DÃ©pendances gÃ©rÃ©es par Composer</li>
    </ul>
  `,
  styles: `
  .tab,p,li{
    font-size:15px;
  }
.tab {
           background-color: #f8f9fa;
           padding: 15px;
           border: 1px solid #ddd;
           border-radius: 5px;
           overflow-x: auto;
           font-family: monospace;
         }
  `,
})
export class LaravelInstallationComponent implements OnInit {
  constructor() {}

  ngOnInit(): void {}
}
