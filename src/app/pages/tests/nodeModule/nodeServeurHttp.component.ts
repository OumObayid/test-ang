import { Component } from '@angular/core';

@Component({
  selector: 'app-node-serveur-http',
  template: `
<div class="container mt-5">
    <h1 class="text-center">üñ•Ô∏è Cr√©er un serveur HTTP avec Node.js</h1>

    <!-- Section 1 : Introduction -->
    <div class="card my-3">
        <div class="card-body">
            <h2 class="card-title">üåê Introduction</h2>
            <p class="card-text">
                Node.js permet de cr√©er des serveurs web l√©gers et rapides. Un serveur HTTP permet de traiter les requ√™tes des utilisateurs et de leur renvoyer des r√©ponses, comme une page web ou des donn√©es JSON.
            </p>
            <p class="card-text">
                Node.js utilise son module natif <code>http</code> pour cr√©er un serveur HTTP. Ce module permet d'√©couter des requ√™tes et de renvoyer des r√©ponses √† l'utilisateur.
            </p>
        </div>
    </div>

    <!-- Section 2 : Cr√©er un serveur HTTP basique -->
    <div class="card my-3">
        <div class="card-body">
            <h2 class="card-title">üñ•Ô∏è Cr√©er un serveur HTTP simple</h2>
            <p class="card-text">
                Pour cr√©er un serveur HTTP avec Node.js, nous allons utiliser le module <code>http</code> natif.
            </p>
            <p class="card-text">
                Voici un exemple de code pour cr√©er un serveur qui r√©pond avec "Hello, World!" √† chaque requ√™te HTTP :
            </p>
            <div class="bg-light p-3 mb-3" style="font-size: 1.2em; border-radius: 5px;">
                <pre><code>
const http = require('http');

const server = http.createServer((req, res) => &#123;
    res.writeHead(200, &#123; 'Content-Type': 'text/plain' &#125;);
    res.end('Hello, World!');
&#125;);

server.listen(3000, () => &#123;
    console.log('Server running at http://localhost:3000');
&#125;);
                </code></pre>
            </div>
            <p class="card-text">
                Ce code cr√©e un serveur qui √©coute sur le port 3000 et renvoie "Hello, World!" √† chaque requ√™te.
                Vous pouvez tester cela en ouvrant votre navigateur et en acc√©dant √† <code>http://localhost:3000</code>.
            </p>
        </div>
    </div>

    <!-- Section 3 : Explication du code -->
    <div class="card my-3">
        <div class="card-body">
            <h2 class="card-title">üîç Explication du code</h2>
            <p class="card-text">
                Analysons le code pour mieux comprendre son fonctionnement :
            </p>
            <ul>
                <li><strong>const http = require('http');</strong> : Cette ligne importe le module natif <code>http</code>, qui permet de cr√©er un serveur HTTP.</li>
                <li><strong>http.createServer</strong> : Cette m√©thode cr√©e un serveur HTTP. Elle prend une fonction de rappel avec deux arguments : <code>req</code> (la requ√™te) et <code>res</code> (la r√©ponse).</li>
                <li><strong>res.writeHead(200, &#123; 'Content-Type': 'text/plain' &#125;);</strong> : Cela envoie un code de statut HTTP 200 (OK) et d√©finit le type de contenu comme texte brut.</li>
                <li><strong>res.end('Hello, World!');</strong> : Cela envoie le message "Hello, World!" au client et termine la r√©ponse.</li>
                <li><strong>server.listen(3000, () => &#123; ... &#125;);</strong> : Cela fait en sorte que le serveur √©coute sur le port 3000. Lorsque le serveur est pr√™t, il affiche un message dans la console.</li>
            </ul>
        </div>
    </div>

    <!-- Section 4 : Tester le serveur -->
    <div class="card my-3">
        <div class="card-body">
            <h2 class="card-title">üîß Tester le serveur</h2>
            <p class="card-text">
                Pour tester ce serveur, proc√©dez comme suit :
            </p>
            <ol>
                <li>Ouvrez un terminal et placez-vous dans le r√©pertoire de votre fichier <code>server.js</code>.</li>
                <li>Ex√©cutez la commande suivante : <code>node server.js</code></li>
                <li>Ouvrez votre navigateur et allez √† l'adresse <code>http://localhost:3000</code>. Vous devriez voir "Hello, World!" affich√©.</li>
            </ol>
        </div>
    </div>
</div>

  `,
  styles: [``]
})
export class NodeServeurHttpComponent {

}

